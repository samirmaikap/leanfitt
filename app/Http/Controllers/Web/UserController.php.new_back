<?php

namespace App\Http\Controllers\Web;

use App\Services\DepartmentService;
use App\Services\EmployeeService;
use App\Services\OrganizationService;
use App\Services\UserService;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Collection;

class UserController extends Controller
{
    protected $userService;
    protected $empService;
    protected $orgService;
    protected $depService;
    public function __construct(UserService $userService,
                                EmployeeService $employeeService,
                                OrganizationService $organizationService,
                                DepartmentService $departmentService)
    {
        $this->userService=$userService;
        $this->empService=$employeeService;
        $this->orgService=$organizationService;
        $this->depService=$departmentService;
    }

    public function index(Request $request){

        $reqdata=$request->all();
//        if(session('role')=='admin'){
//            $reqdata['organization']=session('organization_id');
//            $request=new Request($reqdata);
//        }
        $reqdata['organization']=session('organization')['id'];
        $request=new Request($reqdata);

        $data['activeorg']=$request->get('organization');
        $data['activedep']=$request->get('department');
        $users=$this->userService->index($request);

        $data['users']=$users->success ? $users->data : null;
        if(!empty($request->get('organization'))){
            $organization=$this->orgService->details($request->get('organization'));
            $data['organization']=$organization->success ? $organization->data : null;
        }
        else{
            $data['organization']=null;
        }
        $org_list=$this->orgService->list();
        $data['orglist']=$org_list->success ? $org_list->data : null;
        $dep_list=$this->depService->list($request);
        $data['deplist']=$dep_list->success ? $dep_list->data : null;
        return view('users.index',$data);
    }

    public function show($employee_id){
        $query=$this->empService->show($employee_id);
        dd($query);
    }

    function saveDepartment(Request $request){
        if(!empty($request->get('department_id'))){
            $query=$this->depService->updateDepartment($request,$request->get('department_id'));
        }
        else{
            $query=$this->depService->addDepartment($request);
        }

        if($query->success){
            return redirect()->back()->with(['success',$query->message]);
        }
        else{
            return redirect()->back()->withErrors($query->message);
        }
    }

    public function invite(Request $request){
        $query=$this->empService->invite($request);
        if($query->success){
            return redirect()->back()->with(['success',$query->message]);
        }
        else{
            return redirect()->back()->withErrors($query->message);
        }
    }

    public function actions(Request $request){
        if($request->get('type')=='delete'){
            $query=$this->empService->delete($request->get('employee_id'));
        }
        elseif($request->get('type')=='archive'){
            $query=$this->empService->archive($request->get('employee_id'));
        }
        elseif ($request->get('type')=='restore'){
            $query=$this->empService->restore($request->get('employee_id'));
        }
        else{
            return redirect()->back()->withErrors('No action perefered');
        }

        if($query->success){
            return redirect()->back()->with(['success',$query->message]);
        }
        else{
            return redirect()->back()->withErrors($query->message);
        }
    }

    public function departmentAction(Request $request){
        if($request->get('type')=='delete'){
            $query=$this->depService->removeDepartment($request->get('department_id'),session()->get('id'));
            if($query->success){
                return redirect()->back()->with(['success',$query->message]);
            }
            else{
                return redirect()->back()->withErrors($query->message);
            }
        }

        return redirect()->back()->withErrors('No action perefered');
    }
}
